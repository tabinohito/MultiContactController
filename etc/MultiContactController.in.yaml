---
# If true, the FSM transitions are managed by an external tool
Managed: false
# If true and the FSM is self-managed, transitions should be triggered
StepByStep: true
# Change idle behaviour, if true the state is kept until transition,
# otherwise the FSM holds the last state until transition
IdleKeepState: true
# Where to look for state libraries
StatesLibraries:
  - "@MC_STATES_DEFAULT_INSTALL_PREFIX@"
  - "@STATES_INSTALL_PREFIX@/@PROJECT_NAME@/states"
# Where to look for state files
StatesFiles:
  - "@MC_STATES_DEFAULT_INSTALL_PREFIX@/data"
  - "@STATES_INSTALL_PREFIX@/@PROJECT_NAME@/states/data"
# If true, state factory will be more verbose
VerboseStateFactory: false
# General constraints, always on
constraints:
  - type: contact
  - type: kinematics
    damper: [0.1, 0.01, 0.5]
  - type: compoundJoint
# Collision constraint
collisions:
  - type: collision
    useMinimal: true
# Initial set of contacts
contacts: []

# Implement some additional text states
states:
  MCC::Initial_:
    base: MCC::Initial
    configs:
      initialContacts:
        - limb: LeftFoot
          type: Surface
          fricCoeff: 0.5
        - limb: RightFoot
          type: Surface
          fricCoeff: 0.5

  MCC::GuiWalk_:
    base: MCC::GuiWalk
    configs:
      footstepDuration: 1.5 # [sec]
      doubleSupportRatio: 0.333 # []
      deltaTransLimit: [0.15, 0.1, 12.5] # (x [m], y [m], theta [deg])
      midToFootTranss:
        Left:
          translation: [0, 0.105, 0] # [m]
        Right:
          translation: [0, -0.105, 0] # [m]

  MCC::GuiStep_:
    base: MCC::GuiStep
    configs: {}

  MCC::Main_:
    base: Parallel
    states: [MCC::GuiWalk_, MCC::GuiStep_]

# Transitions map
transitions:
  - [MCC::Initial_, OK, MCC::Main_, Auto]
# Initial state
init: MCC::Initial_

ObserverPipelines:
  name: MainObserverPipeline
  gui: true
  observers:
    - type: Encoder
    - type: Attitude
      config:
        KalmanFilter:
          gyr_cov: 1e-6
    - type: KinematicInertial
      config:
        anchorFrame:
          maxAnchorFrameDiscontinuity: 0.05 # [m]

controllerName: MCC

PostureTask:
  stiffness: 10

CoMTask:
  type: com
  stiffness: [1000.0, 1000.0, 1000.0]
  weight: 1000.0

BaseOrientationTask:
  type: orientation
  stiffness: 300.0
  weight: 500.0

MomentumTask:
  type: momentum
  stiffness: 1.0
  weight: 0.0

LimbTaskList:
  - type: firstOrderImpedance
    limb: LeftFoot
    frame: LeftFootCenter
    cutoffPeriod: 0.01
    weight: 1000.0
  - type: firstOrderImpedance
    limb: RightFoot
    frame: RightFootCenter
    cutoffPeriod: 0.01
    weight: 1000.0

LimbManagerSet:
  name: LimbManagerSet
  SwingTraj:
    CubicSplineSimple:
      withdrawDurationRatio: 0.2
      withdrawOffset: [0, 0, 0.03] # [m]
      approachDurationRatio: 0.2
      approachOffset: [0, 0, 0.03] # [m]
      swingOffset: [0, 0, 0.1] # [m]
  LimbManager:
    default:
      name: LimbManager
      taskGain:
        stiffness: 1000.0
      defaultSwingTrajType: CubicSplineSimple
      swingStartPolicy: ControlRobot
      overwriteLandingPose: false
      stopSwingTrajForTouchDownLimb: true
      keepPoseForTouchDownLimb: false
      enableWrenchDistForTouchDownLimb: true
      weightTransitDuration: 0.1 # [sec]
      enableSensorBasedContactArea: false # tactile sensor
      touchDownRemainingDuration: 0.2 # [sec]
      touchDownPosError: 0.05 # [m]
      touchDownForceZ: 50 # [N]
      impedanceGains:
        SingleContact:
          damper:
            linear: [300, 300, 300]
            angular: [100, 100, 100]
          spring:
            linear: [1125, 1125, 1125]
            angular: [0, 0, 2000]
          wrench:
            linear: [0, 0, 0]
            angular: [1, 1, 0]
        MultiContact:
          damper:
            linear: [1e4, 1e4, 1e4]
            angular: [100, 100, 100]
          spring:
            linear: [0, 0, 0]
            angular: [0, 0, 2000]
          wrench:
            linear: [1, 1, 1]
            angular: [1, 1, 0]
        Swing:
          damper:
            linear: [300, 300, 300]
            angular: [40, 40, 40]
          spring:
            linear: [2250, 2250, 2250]
            angular: [400, 400, 400]
          wrench:
            linear: [0, 0, 0]
            angular: [0, 0, 0]

CentroidalManager:
  name: CentroidalManager
  nominalCentroidalPose:
    translation: [0.0, 0.0, 1.0]
  nominalCentroidalPoseBaseFrame: LimbAveragePose
  refComZPolicy: Average
  limbWeightListForRefData:
    LeftFoot: 1.0
    RightFoot: 1.0
  limbWeightListForAnchorFrame:
    LeftFoot: 1.0
    RightFoot: 1.0
  centroidalGainP:
    linear: [750, 750, 10000]
    angular: [750, 750, 750]
  centroidalGainD:
    linear: [150, 150, 150]
    angular: [150, 150, 150]
  lowPassCutoffPeriod: 0.1 # [sec]
  useActualStateForMpc: false
  enableCentroidalFeedback: true
  useTargetPoseForControlRobotAnchorFrame: true
  useActualComForWrenchDist: false
  actualComOffset: [0.0, 0.0, 0.0]
  wrenchDistConfig:
    wrenchWeight:
      linear: [1.0, 1.0, 1.0]
      angular: [1.0, 1.0, 1.0]
    regularWeight: 1e-8
    ridgeForceMinMax: [3, 1000] # [N]

  # DDP
  method: DDP
  horizonDuration: 2.0 # [sec]
  horizonDt: 0.05 # [sec]
  ddpMaxIter: 1
  angularGainP: [1.0, 1.0, 4.0]
  angularGainD: [2.0, 2.0, 4.0]
  mpcWeightParam:
    runningPos: [10.0, 10.0, 10.0]
    runningLinearMomentum: [1e-6, 1e-6, 1e-6]
    runningAngularMomentum: [1e-3, 1e-3, 1e-3]
    runningForce: 5e-6
    terminalPos: [10.0, 10.0, 10.0]
    terminalLinearMomentum: [1e-6, 1e-6, 1e-6]
    terminalAngularMomentum: [1e-3, 1e-3, 1e-3]

  # # PreviewControl
  # method: PC
  # horizonDuration: 2.0 # [sec]
  # horizonDt: 0.005 # [sec]
  # mpcWeightParam:
  #   pos:
  #     linear: [2e2, 2e2, 2e2]
  #     angular: [1e2, 1e2, 1e2]
  #   wrench:
  #     force: [5e-4, 5e-4, 5e-4]
  #     couple: [5e-3, 5e-3, 5e-3]
  #   jerk:
  #     linear: [1e-8, 1e-8, 1e-8]
  #     angular: [1e-8, 1e-8, 1e-8]
  #   wrenchDistConfig: {}

  # # SRB
  # method: SRB
  # horizonDuration: 2.0 # [sec]
  # horizonDt: 0.05 # [sec]
  # ddpMaxIter: 1
  # mpcWeightParam:
  #   runningPos: [1.0, 1.0, 1.0]
  #   runningOri: [0.5, 0.5, 0.5]
  #   runningLinearVel: [1e-2, 1e-2, 1e-2]
  #   runningAngularVel: [1e-2, 1e-2, 1e-2]
  #   runningForce: 1e-6
  #   terminalPos: [1.0, 1.0, 1.0]
  #   terminalOri: [0.5, 0.5, 0.5]
  #   terminalLinearVel: [1e-2, 1e-2, 1e-2]
  #   terminalAngularVel: [1e-2, 1e-2, 1e-2]

Contacts:
  Surface: {}
  Grasp: {}


# OverwriteConfigKeys: [NoSensors]

OverwriteConfigList:
  NoSensors:
    LimbManagerSet:
      LimbManager:
        default:
          impedanceGains:
            SingleContact:
              wrench:
                linear: [0, 0, 0]
                angular: [0, 0, 0]
            MultiContact:
              wrench:
                linear: [0, 0, 0]
                angular: [0, 0, 0]
            Swing:
              wrench:
                linear: [0, 0, 0]
                angular: [0, 0, 0]

    CentroidalManager:
      useActualStateForMpc: false
      enableCentroidalFeedback: false
      useActualComForWrenchDist: false

robots:
  # Environment models
  ground:
    module: env/ground

  # Robot-specific configurations
  jvrc1:
    PostureTask:
      jointWeights:
        WAIST_R: 100
        WAIST_P: 100
        WAIST_Y: 100

    CoMTask:
      activeJoints: [
      "Root",
      "R_HIP_Y", "R_HIP_R", "R_HIP_P", "R_KNEE", "R_ANKLE_P", "R_ANKLE_R",
      "L_HIP_Y", "L_HIP_R", "L_HIP_P", "L_KNEE", "L_ANKLE_P", "L_ANKLE_R"]

    BaseOrientationTask:
      frame: WAIST_R_S

    CentroidalManager:
      nominalCentroidalPose:
        translation: [0.0, 0.0, 0.825]

    Contacts:
      Surface:
        - name: LeftFoot
          vertices: [[-0.1, -0.04, 0.0], [-0.1, 0.04, 0.0], [0.1, 0.04, 0.0], [0.1, -0.04, 0.0]]
        - name: RightFoot
          vertices: [[-0.1, -0.04, 0.0], [-0.1, 0.04, 0.0], [0.1, 0.04, 0.0], [0.1, -0.04, 0.0]]
